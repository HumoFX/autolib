/// <reference types="node" />
import { EventEmitter } from 'events';
import ReconnectingWebsocket, { Event } from 'reconnecting-websocket';
import { ITransport } from '../interface';
/**
 * Transport backed by a reconnecting websocket
 */
export declare class WebsocketTransport extends EventEmitter implements ITransport {
    readonly url: string;
    readonly options: object;
    socket: ReconnectingWebsocket | null;
    hasConnected: boolean;
    /**
     *
     * @param url Websocket URL to connect to
     * @param options Options to pass to ReconnectingWebsocket
     */
    constructor(url: string, options?: object);
    connect(): boolean;
    isConnected(): boolean;
    send(bytes: string): void;
    protected handleMessage(event: Event): void;
    protected handleOpen(event: Event): void;
}
export default WebsocketTransport;
