/**
 * Promise representing the response to subscription, and offering an additional
 * cancel() method to stop listening for updates.
 *
 * This is returned from DCRFClient.subscribe.
 */
export declare class SubscriptionPromise<T> extends Promise<T> {
    protected unsubscribe: () => boolean;
    constructor(executor: (resolve: (value?: T | PromiseLike<T>) => void, reject: (reason?: any) => void) => void, unsubscribe: () => boolean);
    /**
     * Stop listening for new events on this subscription
     * @return true if the subscription was active, false if it was already unsubscribed
     */
    cancel(): boolean;
}
