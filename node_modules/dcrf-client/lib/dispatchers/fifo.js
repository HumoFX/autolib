"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const lodash_ismatch_1 = __importDefault(require("lodash.ismatch"));
const lodash_pull_1 = __importDefault(require("lodash.pull"));
/**
 * Invokes listeners on a first-registered, first-called basis
 */
class FifoDispatcher {
    constructor() {
        this.listeners = {};
        this.listenersOrder = [];
    }
    listen(selector, handler) {
        const listenerId = ++FifoDispatcher.listenerCounter;
        this.listeners[listenerId] = { selector, handler };
        this.listenersOrder.push(listenerId);
        return listenerId;
    }
    once(selector, handler) {
        const listenerId = this.listen(selector, (payload) => {
            this.cancel(listenerId);
            handler(payload);
        });
        return listenerId;
    }
    cancel(listenerId) {
        if (!this.listeners.hasOwnProperty(listenerId)) {
            return false;
        }
        delete this.listeners[listenerId];
        lodash_pull_1.default(this.listenersOrder, listenerId);
        return true;
    }
    dispatch(payload) {
        const listeners = this.listenersOrder.map(listenerId => this.listeners[listenerId]);
        let matches = 0;
        listeners.forEach(({ selector, handler }) => {
            if (lodash_ismatch_1.default(payload, selector)) {
                matches++;
                handler(payload);
            }
        });
        return matches;
    }
}
FifoDispatcher.listenerCounter = 0;
exports.FifoDispatcher = FifoDispatcher;
exports.default = FifoDispatcher;
